
<< POSTGRESQL ON NATIVE IN WINDOWS >>

https://www.youtube.com/watch?v=3HPq12w-dww&list=PLIWLW8_gNNc1dLUGuSAzpsf3zRDrR-yKy&index=64&t=558s

// Installation in the machine: 
* Download PostgresQL: https://www.postgresql.org/download/
* During installation in 'Please select the apps you'd like to install':
pinch in Database Server: select the first one 
* Download pgAdmin: https://www.pgadmin.org/download/
* pip install psycopg2

// In settings.py

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'DEMO_TEST',
        'USER': 'postgres',
        'PASSWORD': 'Mjjoe1416',
        'HOST': 'localhost',
        'PORT': '5432'
    }
}

To have all of this info go to the pgAdmin, right click on the server, click on properties.

python manage.py makemigrations
python manage.py migrate

To see the tables: 
* Go to the server in pgAdmin -> Databases -> DEMO_TEST -> Schemas -> Tables
To see the date in tables: 
* Right click on the table -> View/Edit data -> All rows 

<< POSTGRESQL ON NATIVE IN UBUNTU >>

https://www.youtube.com/watch?v=9lq74SafVcw
https://www.youtube.com/watch?v=lX9uMCSqqko
https://codingpub.dev/ubuntu-install-postgresql-and-pgadmin/
https://www.digitalocean.com/community/tutorials/como-instalar-y-utilizar-postgresql-en-ubuntu-18-04-es

// Installation and management of PostgresQL
$ sudo apt update 
$ sudo apt install postgresql postgresql-contrib
*Change to the account postgres in my machine:
	$ sudo -i -u postgres
	From there to access to the command line:
	$ psql
	to get out of interactive session:
	\q
	to go back to my user:
	su - <username>
	
	Or to go directly to this interface without changing the account: 
	$ sudo -u postgres psql
	postgres-# \conninfo  #In interactive mode to have info 

* Create new user
sudo -u postgres createuser --interactive -> yes for superuser
* Create new database
sudo -u postgres createdb <name> -> Give it the same name as the user in the step before
* Create user in Ubuntu with the same name as the step before
sudo adduser <name>
* Connect to it 
sudo -u <name> psql
* To connect to another db different than that with the same name as user: 
	sudo -i -u <username>
	psql -d <db_name>
	\conninfo  -> to corroborate
	
// Installation and management of pgAdmin

curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add

sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'

sudo apt install pgadmin4-web

sudo /usr/pgadmin4/bin/setup-web.sh

Follow the instructions and at the end you will be able to connect to the browser in http://127.0.0.1/pgadmin4

To create a server with the interface pgAdmin, it will ask for an user and a password. So, in the Ubuntu terminal you have to set the password for the user:

$ sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"

Done! You saved User = postgres and password = postgres.

If you do not have a password for the User postgres ubuntu do:

$ sudo passwd postgres

// Remove from machine
sudo apt-get purge postgresql*
sudo deluser postgres
sudo apt-get purge pgadmin4



SCRIPT

sudo apt install postgresql postgresql-contrib

sudo apt-get install libpq-dev 
sudo apt-get install python-dev
sudo apt-get install python-pip

pip install psycopg2 (

sudo -u postgres createuser $USER -s
sudo -u postgres createdb sl_db
sudo -i -u $USER
psql -d sl_db
\conninfo
\q


delete an user : dropuser <user_name>
delete db : dropdb <db_name>

delete user from the same user:
sudo -i -u postgres
dropdb <db_names> -> delete all the db that depend on this user
dropuser <user_name>
su liset


echo '1. Creating user'
sudo -u postgres createuser $USER -s
echo '2. creating database'
sudo -u postgres createdb sl_lili
echo '3. adding db'
psql -d sl_lili


echo "STEP 4.1/10: Installing postgreSQL "
sudo apt-get install libpq-dev
sudo apt install postgresql postgresql-contrib
echo "STEP 4.2/10: Creating user for the database"
sudo -u postgres createuser $USER -s
echo "STEP 4.3/10: Creating database: sl_db"
sudo -u postgres createdb sl_db
#echo "STEP 4.4/10: Linking database to user"
#psql -d sl_db
echo "STEP 4.4/10: Migrating to database"
python3 $SHOPPINGLIST_DIR/shoppinglist/manage.py makemigrations
python3 $SHOPPINGLIST_DIR/shoppinglist/manage.py migrate


